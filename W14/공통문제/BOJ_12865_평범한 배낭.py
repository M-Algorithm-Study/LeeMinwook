# 12865 평범한 배낭
# 35108KB / 3380ms

N, K = map(int,input().split())
# dp 리스트
dp = [0] * (K + 1)

for _ in range(N):
    # 각 물건의 무게 W, 해당 물건의 가치 V
    W, V = map(int,input().split())
    # 최대 무게 K까지 최대한 채워야 하기 때문에 역으로 탐색
    # 아래 표와 같이 역으로 탐색해서 최댓값까지 채움
    for i in range(K, W - 1, -1):
        # max(해당 위치의 물건 최대 가치, 넣을 수 있는 물건의 가치 + 현재 물건의 가치)
        dp[i] = max(dp[i], dp[i - W] + V)
        # print(dp)

print(dp[K])

'''
예제 입력
4 7
6 13
4 8
3 6
5 12

위 print(dp)의 출력 결과

Index
[0, 1, 2, 3, 4, 5, 6, 7]
===========================

[0, 0, 0, 0, 0, 0, 0, 13]
[0, 0, 0, 0, 0, 0, 13, 13]      

[0, 0, 0, 0, 0, 0, 13, 13]      
[0, 0, 0, 0, 0, 0, 13, 13]      
[0, 0, 0, 0, 0, 8, 13, 13]      
[0, 0, 0, 0, 8, 8, 13, 13]      

[0, 0, 0, 0, 8, 8, 13, 14]      
[0, 0, 0, 0, 8, 8, 13, 14]      
[0, 0, 0, 0, 8, 8, 13, 14]      
[0, 0, 0, 0, 8, 8, 13, 14]      
[0, 0, 0, 6, 8, 8, 13, 14]      

[0, 0, 0, 6, 8, 8, 13, 14]      
[0, 0, 0, 6, 8, 8, 13, 14]      
[0, 0, 0, 6, 8, 12, 13, 14]
'''