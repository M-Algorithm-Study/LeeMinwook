# 13549 숨바꼭질 3
# 35288KB / 136ms

import sys
input = sys.stdin.readline

from collections import deque

n, m=map(int, input().split())
g = [0]*100001
q = deque([n])
# 처음 시작 1로 초기화 / 실제론 0이지만 구별하기 위해 설정
g[n] = 1

while q:
    x = q.popleft()

    # 동생을 찾으면 출력
    if x == m:
        print(g[m] - 1)
        break

    # 3가지 상황을 모두 반복
    for nx in (2*x, x-1, x+1):
        # 구간 내이고, 방문하지 않았으면
        if 0 <= nx <= 100000 and not g[nx]:
            # *2인 경우
            if nx == 2*x:
                # 0초 증가
                g[nx] = g[x]
                q.append(nx)
            # -1, +1인 경우
            else:
                # 1초 증가
                g[nx] = g[x] + 1
                q.append(nx)

'''
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 3, 2, 1, 2, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 3, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0]
                        ........
[0, 5, 4, 3, 2, 1, 2, 3, 2, 2, 1, 2, 2, 3, 3, 3, 2, 3, 2, 2]
                                                 17
'''